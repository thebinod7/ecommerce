generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int    @id @default(autoincrement())
  uuid          String @unique @default(uuid()) @db.Uuid
  name          String
  email         String @unique
  contactNumber String @unique

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  Order     Order[]

  @@map("tbl_users")
}

model Product {
  id          Int    @id @default(autoincrement())
  uuid        String @unique @default(uuid()) @db.Uuid
  name        String
  imageUrl    String
  slug        String @unique
  unitPrice   Float
  stock       Int    @default(0)
  description String

  createdAt DateTime    @default(now())
  updatedAt DateTime?   @updatedAt
  OrderItem OrderItem[]

  @@map("tbl_products")
}

model Order {
  id         Int    @id @default(autoincrement())
  uuid       String @unique @default(uuid()) @db.Uuid
  trackingId String @unique

  quantity        Int
  totalAmount     Float
  paymentMethod   String
  shippingAddress String
  status          ORDER_STATUS @default(ORDERED)

  userId    Int
  orderedBy User @relation(fields: [userId], references: [id])

  createdAt DateTime    @default(now())
  updatedAt DateTime?   @updatedAt
  OrderItem OrderItem[]

  @@map("tbl_orders")
}

model OrderItem {
  id        Int    @id @default(autoincrement())
  uuid      String @unique @default(uuid()) @db.Uuid
  quantity  Int
  unitPrice Float
  total     Float

  productId Int
  product   Product @relation(fields: [productId], references: [id])

  orderId Int
  order   Order @relation(fields: [orderId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  @@unique([orderId, productId], name: "unique_order_product")
  @@map("tbl_order_items")
}

enum ORDER_STATUS {
  ORDERED
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}
